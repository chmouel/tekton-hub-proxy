name: CI

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]

jobs:
  test:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4

    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: '1.21'

    - name: Cache Go modules
      uses: actions/cache@v3
      with:
        path: ~/go/pkg/mod
        key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
        restore-keys: |
          ${{ runner.os }}-go-

    - name: Download dependencies
      run: go mod download

    - name: Run golangci-lint
      uses: golangci/golangci-lint-action@v3
      with:
        version: latest
        args: --modules-download-mode=vendor

    - name: Run Go tests
      run: go test -v ./...

    - name: Build binary
      run: make build

    - name: Start proxy server in background
      run: |
        echo "Starting proxy server..."
        ./bin/tekton-hub-proxy -debug &
        SERVER_PID=$!
        echo "SERVER_PID=$SERVER_PID" >> $GITHUB_ENV

        # Wait for server to be ready
        echo "Waiting for server to start..."
        for i in {1..30}; do
          if curl -f http://localhost:8080/health >/dev/null 2>&1; then
            echo "Server is ready!"
            break
          fi
          echo "Attempt $i: Server not ready yet, waiting..."
          sleep 2
        done

        # Verify server is actually running
        if ! curl -f http://localhost:8080/health >/dev/null 2>&1; then
          echo "Server failed to start properly"
          exit 1
        fi

    - name: Run integration tests
      run: |
        chmod +x ./tests/test.sh
        ./tests/test.sh http://localhost:8080

    - name: Stop proxy server
      if: always()
      run: |
        if [ ! -z "$SERVER_PID" ]; then
          echo "Stopping server (PID: $SERVER_PID)"
          kill $SERVER_PID || true
          sleep 2
          # Force kill if still running
          kill -9 $SERVER_PID 2>/dev/null || true
        fi